(In-Package "ONTOLINGUA-USER")

;;; Written by user Fionam from session "Session name not supplied [Friday, 19 November 2004, 05:04:06]" owned by group JUST-ME
;;; Date: Nov 19, 2004  05:31
;;; Definitions: 38


(Define-Ontology
     New-Meta
     (Frame-Ontology)
   "Not supplied yet."
   :Io-Package
   "ONTOLINGUA-USER")


(In-Ontology (Quote New-Meta))




;;; Colin

(Define-Frame Colin :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Colin Convert-Paper))) 


;;; Graham

(Define-Frame Graham :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Graham Book-Accom))) 


;;; My-Fact

(Define-Class My-Fact (?X) "Not supplied yet." :Def (And (Predicate ?X))) 


;;; Dollars-Malaysian

(Define-Individual Dollars-Malaysian (Predicate) "Not supplied yet.") 


;;; Submit-Paper

(Define-Individual Submit-Paper (Action) "Not supplied yet.") 


;;; Convert-Paper

(Define-Individual Convert-Paper (Action) "Not supplied yet.") 


;;; Has-Paper

(Define-Frame Has-Paper :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Predicate)) :Axioms ((My-Fact Has-Paper))) 


;;; Money

(Define-Frame Money :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Predicate)) :Axioms ((My-Fact Money))) 


;;; Wait-Fact

(Define-Class Wait-Fact (?X) "Not supplied yet." :Def (And (Predicate ?X))) 


;;; Predicate

(Define-Class Predicate (?X) "Not supplied yet." :Def (And (Thing ?X))) 


;;; Joe

(Define-Frame Joe :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Joe Submit-Paper))) 


;;; Dollars-Us

(Define-Individual Dollars-Us (Predicate) "Not supplied yet.") 


;;; Has-Ticket

(Define-Frame Has-Ticket :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of My-Fact Predicate)) :Axioms ((Inform Has-Ticket))) 


;;; Location

(Define-Frame Location :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Predicate)) :Axioms ((Transitive Location))) 


;;; Accomodation-Info

(Define-Individual Accomodation-Info (Predicate) "Not supplied yet.") 


;;; Sterling

(Define-Individual Sterling (Predicate) "Not supplied yet.") 


;;; Alison

(Define-Frame Alison :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Alison Register))) 


;;; Agent-Needed

(Define-Function Agent-Needed (?Agent-0) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent-0) (Action ?Value))) 


;;; Action

(Define-Class Action (?X) "Not supplied yet." :Def (And (Thing ?X))) 


;;; Inform

(Define-Class Inform (?X) "Not supplied yet." :Def (And (Predicate ?X))) 


;;; Has-Accom

(Define-Frame Has-Accom :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of My-Fact Predicate)) :Axioms ((Inform Has-Accom))) 


;;; Registered

(Define-Frame Registered :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Predicate)) :Axioms ((Inform Registered))) 


;;; Reimburse

(Define-Individual Reimburse (Action) "Not supplied yet.") 


;;; Lucas

(Define-Individual Lucas (Agent) "Not supplied yet.") 


;;; Book-Accom

(Define-Individual Book-Accom (Action) "Not supplied yet.") 


;;; Find-Accom-Info

(Define-Individual Find-Accom-Info (Action) "Not supplied yet.") 


;;; Flight

(Define-Individual Flight (Predicate) "Not supplied yet.") 


;;; Accepted-Paper

(Define-Frame Accepted-Paper :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of My-Fact Predicate)) :Axioms ((Inform Accepted-Paper))) 


;;; Agent

(Define-Class Agent (?X) "Not supplied yet." :Def (And (Thing ?X))) 


;;; Register

(Define-Individual Register (Action) "Not supplied yet.") 


;;; Dan

(Define-Frame Dan :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Dan Book-Flight))) 


;;; Book-Flight

(Define-Individual Book-Flight (Action) "Not supplied yet.") 


;;; Dollars

(Define-Individual Dollars (Predicate) "Not supplied yet.") 


;;; Transitive

(Define-Class Transitive (?X) "Not supplied yet." :Def (And (Predicate ?X))) 


;;; Sophie

(Define-Frame Sophie :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Sophie Reimburse))) 


;;; Registration-Fee

(Define-Individual Registration-Fee (Predicate) "Not supplied yet.") 


;;; Ask-Fact

(Define-Class Ask-Fact (?X) "Not supplied yet." :Def (And (Predicate ?X))) 