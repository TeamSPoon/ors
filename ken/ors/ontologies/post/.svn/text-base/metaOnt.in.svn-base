(Define-Ontology
     New-Meta
     (Frame-Ontology)
   "Not supplied yet."
   :Io-Package
   "ONTOLINGUA-USER")


(In-Ontology (Quote New-Meta))



;;; Address-Letter-Agent 

(Define-Frame Address-Letter-Agent :Own-Slots ((Documentation "Not supplied yet.")(Instance-Of Agent)) :Axioms ((Agent-Needed Address-Letter-Agent Address)))


;;; Post-Ireland-Agent

(Define-Frame Post-Ireland-Agent :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Post-Ireland-Agent Post-Ireland-Letter)))


;;; Post-United-Kingdom-Agent

(Define-Frame Post-United-Kingdom-Agent :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Agent-Needed Post-United-Kingdom-Agent Post-United-Kingdom-Letter)))


;;; Sent

(Define-Class Sent (?X) "Not supplied yet." :Def (And (Predicate ?X)))


;;; Addressed

(Define-Class Addressed (?X) "Not supplied yet." :Def (And (Predicate ?X)))


;;; Located

(Define-Class Located (?X) "Not supplied yet." :Def (And (Predicate ?X)))


;;; My-Office

(Define-Class My-Office (?X) "Not supplied yet." :Def (And (Predicate ?X)))



;;; Address

(Define-Individual Address (Action) "Not supplied yet.")


;;; Post-Ireland

(Define-Individual Post-Ireland (Action) "Not supplied yet.")


;;; Post-United-Kingdom

(Define-Individual Post-United-Kingdom (Action) "Not supplied yet.")



;;; Wait-Fact

(Define-Class Wait-Fact (?X) "Not supplied yet." :Def (And (Predicate ?X)))


;;; Predicate

(Define-Class Predicate (?X) "Not supplied yet." :Def (And (Thing ?X)))


;;; Agent-Needed

(Define-Function Agent-Needed (?Agent-0) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent-0) (Action ?Value)))


;;; Action

(Define-Class Action (?X) "Not supplied yet." :Def (And (Thing ?X)))


;;; Inform

(Define-Class Inform (?X) "Not supplied yet." :Def (And (Predicate ?X)))


;;; Agent

(Define-Class Agent (?X) "Not supplied yet." :Def (And (Thing ?X)))


;;; Ask-Fact

(Define-Class Ask-Fact (?X) "Not supplied yet." :Def (And (Predicate ?X)))