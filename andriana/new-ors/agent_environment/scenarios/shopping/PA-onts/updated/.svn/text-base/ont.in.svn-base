;;; Agent
(Define-Class Agent (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Contaminant
(Define-Class Contaminant (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Percentage
(Define-Class Percentage (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Treats
(Define-Relation Treats (?Agent ?Contaminant ?Percentage ?Situation) "Not supplied yet." :Def (And (Agent ?Agent) (Contaminant ?Contaminant) (Percentage ?Percentage) (Sit-Var ?Situation)))

;;; At
(Define-Relation At (?Agent ?Contaminant ?Situation) "Not supplied yet." :Def (And (Agent ?Agent) (Contaminant ?Contaminant) (Sit-Var ?Situation)))

;;; Used
(Define-Function Used (?Agent ?Situation) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent) (Number ?Value) (Sit-Var ?Situation)))

;;; Max
(Define-Function Max (?Agent ?Situation) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent) (Number ?Value) (Sit-Var ?Situation)))

;;; Plant-Zero
(Define-Frame Plant-Zero :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Treats Plant-Zero Alpha 60 [(Start)])))

;;; Plant-One
(Define-Frame Plant-One :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((Used Plant-One 200 [(Start)]) (Max Plant-One 400 [(Start)])))

;;; Plant-Two
(Define-Frame Plant-Two :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent)) :Axioms ((At Plant-Two Alpha [(Start)]) (At Plant-Two Beta [(Start)])))

;;; Send Contaminant
(Define-Axiom Send-Contaminant "Not supplied yet." := (=> (And (At ?Agent1 ?Contaminant ?Sit1) (Treats ?Agent2 ?Contaminant 60 ?Sit1)) (And (At ?Agent2 ?Contaminant ?Sit2))))

;;; Send Volume
(Define-Axiom Send-Volume "Not supplied yet." := (=> (And (Agent ?Agent1) (Agent ?Agent2) (Number ?Sent) (Used ?Agent1 ?Used1 ?Sit1) (Max ?Agent1 ?Max1 ?Sit1) (Used ?Agent2 ?Used2 ?Sit1) (> ?Used1 ?Sent)) (And (= ?Newused1 (- ?Used1 ?Sent)) (Used ?Agent1 ?Newused1 ?Sit2) (= ?Newused2 (+ ?Used2 ?Sent)) (Used ?Agent2 ?Newused2 ?Sit2))))

;;; Alpha
(Define-Individual Alpha (Contaminant) "Not supplied yet.")

;;; Beta
(Define-Individual Beta (Contaminant) "Not supplied yet.")

;;; Sit-Var
(Define-Class Sit-Var (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Start
(Define-Individual Start (Sit-Var) "Not supplied yet.")



(Define-Axiom Join-Group "Not supplied yet." := (=> (And (Group ?Group)) (And (Registered-Member ?Agent ?Group))))

;;; Our-Mutual-Friend

(Define-Frame Our-Mutual-Friend  :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Book)) :Axioms ((Cost Our-Mutual-Friend 9 [(Start)])))

;;; Book-Shop-Group

(Define-Individual Book-Shop-Group (Shopping-Group) "Not supplied yet.")

;;; Ai-Group

(Define-Individual Ai-Group (Academic-Group) "Not supplied yet.")

;;; Shopping-Agent

(Define-Frame Shopping-Agent :Own-Slots ((Documentation "Not supplied yet.") (Instance-Of Agent) (Registered-Member Ai-Group [(Start)]) (Choose-Item Our-Mutual-Friend [(Start)])) :Axioms ((Money Shopping-Agent 100 [(Start)])))

;;; Currency

(Define-Class Currency (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Dollars

(Define-Individual Dollars (Currency) "Not supplied yet.")

;;; Sterling

(Define-Function Sterling (?Agent-0 ?Situation) :-> ?Value "Not supplied yet." :Def (And (Agent ?Agent-0) (Number ?Value) (Sit-Var ?Situation)))

;;; Confirmation-Number

(Define-Class Confirmation-Number (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Pseudo-Var

(Define-Individual Pseudo-Var (Confirmation-Number) "Not supplied yet.")

;;; Sit-Var

(Define-Class Sit-Var (?X) "Not supplied yet." :Def (And (Thing ?X)))

;;; Start

(Define-Individual Start (Sit-Var) "Not supplied yet.")


f (And (Thing ?X)))

;;; Start

(Define-Individual Start (Sit-Var) "Not supplied yet.")
